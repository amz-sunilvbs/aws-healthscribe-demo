{
 "Resources": {
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": false,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameAttributes": [
     "email"
    ],
    "UserPoolName": "HealthScribeUserPool-HealthScribeFullStack-dev",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPool/Resource"
   }
  },
  "UserPoolClient2F5918F7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    },
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ClientName": "HealthScribeUserPoolClient-HealthScribeFullStack-dev",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPoolClient/Resource"
   }
  },
  "IdentityPool": {
   "Type": "AWS::Cognito::IdentityPool",
   "Properties": {
    "AllowUnauthenticatedIdentities": false,
    "CognitoIdentityProviders": [
     {
      "ClientId": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "ProviderName": {
       "Fn::GetAtt": [
        "UserPool6BA7E5F2",
        "ProviderName"
       ]
      }
     }
    ],
    "IdentityPoolName": "HealthScribeIdentityPool-HealthScribeFullStack-dev"
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/IdentityPool"
   }
  },
  "UserPreferencesTableA0B50479": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "UserPreferences-HealthScribeFullStack-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesTable/Resource"
   }
  },
  "PatientsTable087EEB9B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "patientId",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "patientId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "providerId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "patientName",
      "AttributeType": "S"
     },
     {
      "AttributeName": "lastEncounterDate",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "providerId-patientName-index",
      "KeySchema": [
       {
        "AttributeName": "providerId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "patientName",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "providerId-lastEncounterDate-index",
      "KeySchema": [
       {
        "AttributeName": "providerId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "lastEncounterDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "NainaHealthScribe-Patients-HealthScribeFullStack-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/PatientsTable/Resource"
   }
  },
  "UserPreferencesFunctionServiceRoleAC07CD09": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesFunction/ServiceRole/Resource"
   }
  },
  "UserPreferencesFunctionServiceRoleDefaultPolicy8500D257": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatientsTable087EEB9B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UserPreferencesTableA0B50479",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatientsTable087EEB9B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UserPreferencesFunctionServiceRoleDefaultPolicy8500D257",
    "Roles": [
     {
      "Ref": "UserPreferencesFunctionServiceRoleAC07CD09"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UserPreferencesFunctionE60C62FF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-085226951177-us-east-1",
     "S3Key": "3c74b21adf9998b101aca672b83f3028f4cc0be20b11ff5e27e8845741df69c3.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionServiceRoleAC07CD09",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "USER_PREFERENCES_TABLE_NAME": {
       "Ref": "UserPreferencesTableA0B50479"
      },
      "PATIENTS_TABLE_NAME": {
       "Ref": "PatientsTable087EEB9B"
      },
      "REGION": "us-east-1"
     }
    },
    "FunctionName": "UserPreferencesApi-HealthScribeFullStack-dev",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "UserPreferencesFunctionServiceRoleDefaultPolicy8500D257",
    "UserPreferencesFunctionServiceRoleAC07CD09"
   ],
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesFunction/Resource",
    "aws:asset:path": "asset.3c74b21adf9998b101aca672b83f3028f4cc0be20b11ff5e27e8845741df69c3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UserPreferencesApi61334ABA": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for user preferences management",
    "Name": "UserPreferencesApi-HealthScribeFullStack-dev"
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Resource"
   }
  },
  "UserPreferencesApiCloudWatchRoleBC82B2D8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/CloudWatchRole/Resource"
   }
  },
  "UserPreferencesApiAccount8DA8AF12": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "UserPreferencesApiCloudWatchRoleBC82B2D8",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "UserPreferencesApi61334ABA"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Account"
   }
  },
  "UserPreferencesApiDeploymentA4E206DE3c7346e4abddfac9d2b9991016a42268": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "Description": "API for user preferences management"
   },
   "DependsOn": [
    "UserPreferencesApiOPTIONS6F6E6C0D",
    "UserPreferencesApipreferencesuserIdDELETEB7A36396",
    "UserPreferencesApipreferencesuserIdGET8103E2AF",
    "UserPreferencesApipreferencesuserIdOPTIONS646A7D5C",
    "UserPreferencesApipreferencesuserIdPATCHD120ABC2",
    "UserPreferencesApipreferencesuserIdPUT859B15BD",
    "UserPreferencesApipreferencesuserId9CEBDD9C",
    "UserPreferencesApipreferencesOPTIONS8863B373",
    "UserPreferencesApipreferencesDDA6FAC8"
   ],
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Deployment/Resource"
   }
  },
  "UserPreferencesApiDeploymentStageprodABFDC0FD": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "DeploymentId": {
     "Ref": "UserPreferencesApiDeploymentA4E206DE3c7346e4abddfac9d2b9991016a42268"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "UserPreferencesApiAccount8DA8AF12"
   ],
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/DeploymentStage.prod/Resource"
   }
  },
  "UserPreferencesApiOPTIONS6F6E6C0D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "UserPreferencesApi61334ABA",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/OPTIONS/Resource"
   }
  },
  "UserPreferencesApipreferencesDDA6FAC8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UserPreferencesApi61334ABA",
      "RootResourceId"
     ]
    },
    "PathPart": "preferences",
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/Resource"
   }
  },
  "UserPreferencesApipreferencesOPTIONS8863B373": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "UserPreferencesApipreferencesDDA6FAC8"
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/OPTIONS/Resource"
   }
  },
  "UserPreferencesApipreferencesuserId9CEBDD9C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "UserPreferencesApipreferencesDDA6FAC8"
    },
    "PathPart": "{userId}",
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/Resource"
   }
  },
  "UserPreferencesApipreferencesuserIdOPTIONS646A7D5C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "UserPreferencesApipreferencesuserId9CEBDD9C"
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/OPTIONS/Resource"
   }
  },
  "UserPreferencesApipreferencesuserIdGETApiPermissionHealthScribeFullStackdevUserPreferencesApiA2CA09C6GETpreferencesuserId65CC2F28": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/",
       {
        "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
       },
       "/GET/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/GET/ApiPermission.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.GET..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdGETApiPermissionTestHealthScribeFullStackdevUserPreferencesApiA2CA09C6GETpreferencesuserIdC14BB3BC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/test-invoke-stage/GET/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/GET/ApiPermission.Test.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.GET..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdGET8103E2AF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "UserPreferencesApipreferencesuserId9CEBDD9C"
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UserPreferencesFunctionE60C62FF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/GET/Resource"
   }
  },
  "UserPreferencesApipreferencesuserIdPUTApiPermissionHealthScribeFullStackdevUserPreferencesApiA2CA09C6PUTpreferencesuserId416133A5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/",
       {
        "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
       },
       "/PUT/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/PUT/ApiPermission.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.PUT..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdPUTApiPermissionTestHealthScribeFullStackdevUserPreferencesApiA2CA09C6PUTpreferencesuserId0B35BF3D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/test-invoke-stage/PUT/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/PUT/ApiPermission.Test.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.PUT..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdPUT859B15BD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "UserPreferencesApipreferencesuserId9CEBDD9C"
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UserPreferencesFunctionE60C62FF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/PUT/Resource"
   }
  },
  "UserPreferencesApipreferencesuserIdPATCHApiPermissionHealthScribeFullStackdevUserPreferencesApiA2CA09C6PATCHpreferencesuserId3CDD7A04": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/",
       {
        "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
       },
       "/PATCH/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/PATCH/ApiPermission.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.PATCH..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdPATCHApiPermissionTestHealthScribeFullStackdevUserPreferencesApiA2CA09C6PATCHpreferencesuserIdAB1E8840": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/test-invoke-stage/PATCH/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/PATCH/ApiPermission.Test.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.PATCH..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdPATCHD120ABC2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PATCH",
    "ResourceId": {
     "Ref": "UserPreferencesApipreferencesuserId9CEBDD9C"
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UserPreferencesFunctionE60C62FF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/PATCH/Resource"
   }
  },
  "UserPreferencesApipreferencesuserIdDELETEApiPermissionHealthScribeFullStackdevUserPreferencesApiA2CA09C6DELETEpreferencesuserId5E9F9EA8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/",
       {
        "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
       },
       "/DELETE/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/DELETE/ApiPermission.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.DELETE..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdDELETEApiPermissionTestHealthScribeFullStackdevUserPreferencesApiA2CA09C6DELETEpreferencesuserIdAE8593F3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserPreferencesFunctionE60C62FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:085226951177:",
       {
        "Ref": "UserPreferencesApi61334ABA"
       },
       "/test-invoke-stage/DELETE/preferences/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/DELETE/ApiPermission.Test.HealthScribeFullStackdevUserPreferencesApiA2CA09C6.DELETE..preferences.{userId}"
   }
  },
  "UserPreferencesApipreferencesuserIdDELETEB7A36396": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "UserPreferencesApipreferencesuserId9CEBDD9C"
    },
    "RestApiId": {
     "Ref": "UserPreferencesApi61334ABA"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UserPreferencesFunctionE60C62FF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserPreferencesApi/Default/preferences/{userId}/DELETE/Resource"
   }
  },
  "FrontendBucketEFE2E19C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "healthscribe-frontend-healthscribefullstack-dev",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:3e4ccc57",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/FrontendBucket/Resource"
   }
  },
  "FrontendBucketPolicy1DFF75D9": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "FrontendBucketEFE2E19C"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "FrontendBucketEFE2E19C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FrontendBucketEFE2E19C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "FrontendBucketEFE2E19C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FrontendBucketEFE2E19C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "FrontendBucketEFE2E19C",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/FrontendBucket/Policy/Resource"
   }
  },
  "FrontendBucketAutoDeleteObjectsCustomResourceDB860B32": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "FrontendBucketEFE2E19C"
    }
   },
   "DependsOn": [
    "FrontendBucketPolicy1DFF75D9"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/FrontendBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-085226951177-us-east-1",
     "S3Key": "d28a3fa64d0bd6c7c6f1d6fd707d3e6dc5c81fe8f47891b89459b6492586997f.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "FrontendBucketEFE2E19C"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.d28a3fa64d0bd6c7c6f1d6fd707d3e6dc5c81fe8f47891b89459b6492586997f",
    "aws:asset:property": "Code"
   }
  },
  "UserFilesBucketCFDFD8C0": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "healthscribe-storage-healthscribefullstack-dev",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserFilesBucket/Resource"
   }
  },
  "UserFilesBucketPolicyAB4E8050": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UserFilesBucketCFDFD8C0"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserFilesBucketCFDFD8C0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserFilesBucketCFDFD8C0",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserFilesBucket/Policy/Resource"
   }
  },
  "UserFilesBucketAutoDeleteObjectsCustomResourceFED4165F": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UserFilesBucketCFDFD8C0"
    }
   },
   "DependsOn": [
    "UserFilesBucketPolicyAB4E8050"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/UserFilesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "HealthScribeServiceRole30AAD1BD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "transcribe.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Service role for AWS HealthScribe Medical Scribe jobs",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject",
          "s3:ListBucket",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "UserFilesBucketCFDFD8C0",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": [
          "kms:Decrypt",
          "kms:GenerateDataKey"
         ],
         "Condition": {
          "StringEquals": {
           "kms:ViaService": [
            "s3.us-east-1.amazonaws.com"
           ]
          }
         },
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "HealthScribeServicePolicy"
     }
    ],
    "RoleName": "HealthScribeServiceRole-HealthScribeFullStack-dev"
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/HealthScribeServiceRole/Resource"
   }
  },
  "OAIE1EFC67F": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "OAI for HealthScribeFullStack-dev"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/OAI/Resource"
   }
  },
  "FrontendDistributionE6EAF405": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 300,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCachingMinTTL": 300,
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "CachedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "Compress": true,
      "TargetOriginId": "HealthScribeFullStackdevFrontendDistributionOrigin1E31C206D",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "FrontendBucketEFE2E19C",
         "RegionalDomainName"
        ]
       },
       "Id": "HealthScribeFullStackdevFrontendDistributionOrigin1E31C206D",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "OAIE1EFC67F"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/FrontendDistribution/Resource"
   }
  },
  "AuthenticatedRole86104F1A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "IdentityPool"
         }
        },
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/uploads/${cognito-identity.amazonaws.com:sub}/*"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/uploads/*"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/uploads/HealthScribeDemo/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": "s3:GetObject",
         "Condition": {
          "StringLike": {
           "s3:ExistingObjectTag/CreatedBy": "HealthScribe"
          }
         },
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "UserFilesBucketCFDFD8C0",
              "Arn"
             ]
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": "s3:GetObject",
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*/*-clinical-notes.json"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*/*-summary.json"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*/*-transcript.json"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*/clinical-notes.json"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*/summary.json"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserFilesBucketCFDFD8C0",
               "Arn"
              ]
             },
             "/*/transcript.json"
            ]
           ]
          }
         ]
        },
        {
         "Action": "s3:ListBucket",
         "Condition": {
          "StringLike": {
           "s3:prefix": [
            "uploads/${cognito-identity.amazonaws.com:sub}/*",
            "uploads/HealthScribeDemo/*",
            "uploads/*",
            "*/"
           ]
          }
         },
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "UserFilesBucketCFDFD8C0",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "S3Access"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:DeleteItem",
          "dynamodb:GetItem",
          "dynamodb:PutItem",
          "dynamodb:Query",
          "dynamodb:Scan",
          "dynamodb:UpdateItem"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "PatientsTable087EEB9B",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "PatientsTable087EEB9B",
               "Arn"
              ]
             },
             "/index/*"
            ]
           ]
          }
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "DynamoDBAccess"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "transcribe:DeleteMedicalScribeJob",
          "transcribe:DeleteTranscriptionJob",
          "transcribe:GetMedicalScribeJob",
          "transcribe:GetTranscriptionJob",
          "transcribe:ListMedicalScribeJobs",
          "transcribe:ListTranscriptionJobs",
          "transcribe:StartMedicalScribeJob",
          "transcribe:StartTranscriptionJob"
         ],
         "Condition": {
          "StringEquals": {
           "aws:RequestedRegion": "us-east-1"
          }
         },
         "Effect": "Allow",
         "Resource": "*"
        },
        {
         "Action": "iam:PassRole",
         "Condition": {
          "StringEquals": {
           "iam:PassedToService": "transcribe.amazonaws.com"
          }
         },
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "HealthScribeServiceRole30AAD1BD",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "TranscribeAccess"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "comprehendmedical:DetectEntitiesV2",
          "comprehendmedical:DetectPHI",
          "comprehendmedical:InferICD10CM",
          "comprehendmedical:InferRxNorm",
          "comprehendmedical:InferSNOMEDCT"
         ],
         "Condition": {
          "StringEquals": {
           "aws:RequestedRegion": "us-east-1"
          }
         },
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ComprehendMedicalAccess"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/AuthenticatedRole/Resource"
   }
  },
  "IdentityPoolRoleAttachment": {
   "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
   "Properties": {
    "IdentityPoolId": {
     "Ref": "IdentityPool"
    },
    "Roles": {
     "authenticated": {
      "Fn::GetAtt": [
       "AuthenticatedRole86104F1A",
       "Arn"
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/IdentityPoolRoleAttachment"
   }
  },
  "FrontendDeploymentAwsCliLayer77737BA0": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-085226951177-us-east-1",
     "S3Key": "97ddc23e85dd268891556f73d5b9ae70f788f175c5b81b471162aa0281c24214.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/FrontendDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.97ddc23e85dd268891556f73d5b9ae70f788f175c5b81b471162aa0281c24214.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "FrontendDeploymentCustomResource068A52DB": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-085226951177-us-east-1",
     "cdk-hnb659fds-assets-085226951177-us-east-1"
    ],
    "SourceObjectKeys": [
     "bf5f58af24bd053924468d621659e324caedc3fc5ade2eed40037244f30b5bef.zip",
     "ad493f119fc76fbfbc86d0d30a3851864dc06d7707f63d33a3a1835cd2d72d1f.zip"
    ],
    "SourceMarkers": [
     {},
     {
      "<<marker:0xbaba:0>>": {
       "Ref": "UserPool6BA7E5F2"
      },
      "<<marker:0xbaba:1>>": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "<<marker:0xbaba:2>>": {
       "Ref": "UserFilesBucketCFDFD8C0"
      },
      "<<marker:0xbaba:3>>": {
       "Ref": "IdentityPool"
      },
      "<<marker:0xbaba:4>>": {
       "Fn::GetAtt": [
        "HealthScribeServiceRole30AAD1BD",
        "Arn"
       ]
      },
      "<<marker:0xbaba:5>>": {
       "Ref": "UserPreferencesApi61334ABA"
      },
      "<<marker:0xbaba:6>>": {
       "Ref": "AWS::URLSuffix"
      },
      "<<marker:0xbaba:7>>": {
       "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
      }
     }
    ],
    "DestinationBucketName": {
     "Ref": "FrontendBucketEFE2E19C"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "FrontendDistributionE6EAF405"
    },
    "DistributionPaths": [
     "/*"
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/FrontendDeployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-085226951177-us-east-1",
        "arn:aws:s3:::cdk-hnb659fds-assets-085226951177-us-east-1/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FrontendBucketEFE2E19C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FrontendBucketEFE2E19C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-085226951177-us-east-1",
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "FrontendDeploymentAwsCliLayer77737BA0"
     }
    ],
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21S0W7bMAz8lr4rWpcN2F5dFwUGbGiQbHsNZIl12chSIFI1DMH/Pki2Y2PoE+94Zx1lai+/f5P3d6qnnTaXncVGphMrfRGqp3PSvnXIXqY/BOHgvRX1i7vhBdQWwfFWWjs/DDhGHpaPt/zoLVTMSr924HgUZnCq86aR6bdqLGR7AaOwqmuMkukpOs3oXZa2+AChQ6KZ/VQDhL8QCj+hay2wv/lHgaqTKYdnc6kHb1EP5aSCRkFfzkkRAZOschEGrtYPeVD5EPUF+PHWyG6Zpu6DIhATzMfNaCprypaPQl2xVQy9GmQ6AnF1xTLZCiutfXQs1szc3bATq7ZcZwJHIB+DhjLNL+BXb7I4o0WdQwoehbY+mpfgHcv0HLDFnApEy8ayu86ep+z50PGIxAGbuKxly8dxzS1/NE+Krs2+58jXyKKOxL77aLr/pEPw72ggzO/ibPPCz6onbVFWPdUWyxsYhfMG5Bt9et/v5eev8v7ujRB3ITrGDuRxqv8A+i35LAUDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "HealthScribeFullStack-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "UserPreferencesApiEndpoint0C1D5AE7": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UserPreferencesApi61334ABA"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
      },
      "/"
     ]
    ]
   }
  },
  "FrontendUrl": {
   "Description": "Frontend URL (CloudFront)",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "FrontendDistributionE6EAF405",
        "DomainName"
       ]
      }
     ]
    ]
   }
  },
  "ApiUrl": {
   "Description": "User Preferences API URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UserPreferencesApi61334ABA"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UserPreferencesApiDeploymentStageprodABFDC0FD"
      },
      "/"
     ]
    ]
   }
  },
  "UserPoolId": {
   "Description": "Cognito User Pool ID",
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   }
  },
  "UserPoolClientId": {
   "Description": "Cognito User Pool Client ID",
   "Value": {
    "Ref": "UserPoolClient2F5918F7"
   }
  },
  "IdentityPoolId": {
   "Description": "Cognito Identity Pool ID",
   "Value": {
    "Ref": "IdentityPool"
   }
  },
  "TableName": {
   "Description": "DynamoDB table name",
   "Value": {
    "Ref": "UserPreferencesTableA0B50479"
   }
  },
  "PatientsTableName": {
   "Description": "Patients DynamoDB table name",
   "Value": {
    "Ref": "PatientsTable087EEB9B"
   }
  },
  "PatientsTableArn": {
   "Description": "Patients DynamoDB table ARN",
   "Value": {
    "Fn::GetAtt": [
     "PatientsTable087EEB9B",
     "Arn"
    ]
   }
  },
  "FunctionName": {
   "Description": "Lambda function name",
   "Value": {
    "Ref": "UserPreferencesFunctionE60C62FF"
   }
  },
  "BucketName": {
   "Description": "Frontend S3 bucket name",
   "Value": {
    "Ref": "FrontendBucketEFE2E19C"
   }
  },
  "UserFilesBucketName": {
   "Description": "User files S3 bucket name",
   "Value": {
    "Ref": "UserFilesBucketCFDFD8C0"
   }
  },
  "DistributionId": {
   "Description": "CloudFront distribution ID",
   "Value": {
    "Ref": "FrontendDistributionE6EAF405"
   }
  },
  "HealthScribeServiceRoleArn": {
   "Description": "HealthScribe service role ARN",
   "Value": {
    "Fn::GetAtt": [
     "HealthScribeServiceRole30AAD1BD",
     "Arn"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}