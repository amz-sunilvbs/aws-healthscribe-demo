import{r as s}from"./index-PUGhrfWv.js";const o={providerName:"",providerSpecialty:"FAMILY_MEDICINE",enabledNoteTemplates:["HISTORY_AND_PHYSICAL","GIRPP","BIRP","SIRP","DAP","BH_SOAP","PH_SOAP"],defaultNoteTemplate:"HISTORY_AND_PHYSICAL",comprehendMedicalEnabled:!0,billingCycle:"MONTHLY",region:"us-east-1",apiTiming:!1,defaultPlaybackSpeed:1,skipInterval:5,autoScroll:!0,defaultTab:"transcript",smallTalkDefault:!1,silenceDefault:!1,confidenceThreshold:75,autoExtract:!1},h=[{label:"Family Medicine",value:"FAMILY_MEDICINE"},{label:"Internal Medicine",value:"INTERNAL_MEDICINE"},{label:"Pediatrics",value:"PEDIATRICS"},{label:"Cardiology",value:"CARDIOLOGY"},{label:"Dermatology",value:"DERMATOLOGY"},{label:"Emergency Medicine",value:"EMERGENCY_MEDICINE"},{label:"Endocrinology",value:"ENDOCRINOLOGY"},{label:"Gastroenterology",value:"GASTROENTEROLOGY"},{label:"Neurology",value:"NEUROLOGY"},{label:"Oncology",value:"ONCOLOGY"},{label:"Orthopedics",value:"ORTHOPEDICS"},{label:"Psychiatry",value:"PSYCHIATRY"},{label:"Radiology",value:"RADIOLOGY"},{label:"Surgery",value:"SURGERY"},{label:"Urology",value:"UROLOGY"},{label:"Other",value:"OTHER"}],y=[{label:"History and Physical",value:"HISTORY_AND_PHYSICAL",description:"Comprehensive clinical documentation with sections like Chief Complaint, History of Present Illness, Review of Systems, Past Medical History, Assessment, and Plan"},{label:"GIRPP (Goal, Intervention, Response, Progress, Plan)",value:"GIRPP",description:"Goal-oriented documentation format focusing on treatment goals and patient progress"},{label:"BIRP (Behavior, Intervention, Response, Plan)",value:"BIRP",description:"Behavioral health format focusing on patient behavioral patterns and responses to treatment"},{label:"SIRP (Situation, Intervention, Response, Plan)",value:"SIRP",description:"Therapy-focused format emphasizing situational context and therapeutic interventions"},{label:"DAP (Data, Assessment, Plan)",value:"DAP",description:"Simplified clinical documentation format with patient data, clinical assessment, and treatment plan"},{label:"BH-SOAP (Behavioral Health SOAP)",value:"BH_SOAP",description:"Behavioral health focused SOAP format with Subjective, Objective, Assessment, and Plan sections"},{label:"PH-SOAP (Physical Health SOAP)",value:"PH_SOAP",description:"Physical health focused SOAP format with Subjective, Objective, Assessment, and Plan sections"}],i="",P="user-preferences",f="anonymous-user-id";function p(){return`anonymous-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}function E(){let r=localStorage.getItem(f);return r||(r=p(),localStorage.setItem(f,r)),r}function c(){try{const r=localStorage.getItem(P);if(r){const e=JSON.parse(r);return{...o,...e}}}catch(r){console.error("Error loading user preferences from localStorage:",r)}return o}function l(r){try{localStorage.setItem(P,JSON.stringify(r))}catch(e){console.error("Error saving user preferences to localStorage:",e)}}async function g(r){try{if(!i)return console.log("API not configured, using localStorage"),c();const e=await fetch(`${i}/preferences/${r}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(e.ok){const a=await e.json();return{...o,...a}}else return console.warn("Failed to load preferences from API, using localStorage fallback"),c()}catch(e){return console.error("Error loading preferences from API:",e),c()}}async function d(r,e){try{return i?(await fetch(`${i}/preferences/${r}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok?(l(e),!0):(console.warn("Failed to save preferences to API, using localStorage fallback"),l(e),!1):(console.log("API not configured, using localStorage"),l(e),!0)}catch(a){return console.error("Error saving preferences to API:",a),l(e),!1}}function O(){const[r,e]=s.useState(o),[a]=s.useState(E),[I,u]=s.useState(!0);return s.useEffect(()=>{(async()=>{u(!0);try{const t=await g(a);e(t)}catch(t){console.error("Error loading preferences:",t),e(c())}finally{u(!1)}})()},[a]),{preferences:r,updatePreferences:async n=>{const t={...r,...n};e(t);try{await d(a,t)}catch(S){console.error("Error saving preferences:",S)}},resetToDefaults:async()=>{e(o);try{await d(a,o)}catch(n){console.error("Error resetting preferences:",n)}},userId:a,loading:I}}export{y as C,h as M,O as u};
